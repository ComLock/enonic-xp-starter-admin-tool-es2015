plugins {
	id 'java' // Needed for assemble and build
	//id 'maven'
	id 'com.enonic.xp.app' version '1.1.0'
	id 'com.moowork.node' version '1.2.0'
}


repositories {
	mavenLocal()
	jcenter()
	xp.enonicRepo()
}


app {
	name = project.appName
	displayName = 'Starter Admintool. Change me in build.gradle'
	vendorName = 'Enonic AS'
	vendorUrl = 'http://enonic.com'
	systemVersion = "${xpVersion}"
}


dependencies {
	compile "com.enonic.xp:core-api:${xpVersion}"
	compile "com.enonic.xp:portal-api:${xpVersion}"

	//include "com.enonic.xp:lib-admin:${xpVersion}"
	//include "com.enonic.xp:lib-auth:${xpVersion}"
	//include "com.enonic.xp:lib-cluster:${xpVersion}"
	//include "com.enonic.xp:lib-content:${xpVersion}"
	//include "com.enonic.xp:lib-context:${xpVersion}"
	//include "com.enonic.xp:lib-event:${xpVersion}"
	//include "com.enonic.xp:lib-i18n:${xpVersion}"
	//include "com.enonic.xp:lib-io:${xpVersion}"
	//include "com.enonic.xp:lib-mail:${xpVersion}"
	//include "com.enonic.xp:lib-mustache:${xpVersion}"
	//include "com.enonic.xp:lib-node:${xpVersion}"
	//include "com.enonic.xp:lib-portal:${xpVersion}"
	//include "com.enonic.xp:lib-repo:${xpVersion}"
	//include "com.enonic.xp:lib-task:${xpVersion}"
	//include "com.enonic.xp:lib-thymeleaf:${xpVersion}"
	//include "com.enonic.xp:lib-websocket:${xpVersion}"
	//include "com.enonic.xp:lib-xslt:${xpVersion}"

	//include "com.enonic.lib:lib-admin-ui:${libAdminUiVersion}"
	//include 'com.enonic.lib:lib-cache:1.1.0'
	//include 'com.enonic.lib:lib-http-client:1.0.1'
	//include 'com.enonic.lib:lib-router:1.0.0'
	//include 'com.enonic.lib:menu:1.3.3'
	//include 'com.enonic.lib:text-encoding:1.2.0'
	//include 'com.enonic.lib:util:1.3.0'
}


node {
	version '10.14.2'
	download true
}


tasks.withType(Copy) {
  includeEmptyDirs = false
}


task wrapper(type: Wrapper) {
	gradleVersion = '4.10.2'
}


task webpack(type:NodeTask) {
	dependsOn npmInstall
	script = file('node_modules/webpack-cli/bin/cli.js')
	args = [
		'--color'
	]
	outputs.dir './build/resources/main' // processResources will delete the directory if this is not present
}


processResources {
	dependsOn webpack
	mustRunAfter webpack

	exclude '**/.gitkeep'

	// Let webpack handle these (rather than gradle)
	exclude '**/*.css'
	exclude '**/*.es'
	exclude '**/*.js'
	exclude '**/*.less'
	exclude '**/*.sass'
	exclude '**/*.scss'
	exclude '**/*.styl'
}


task watch(type:NodeTask) {
	script = file('node_modules/webpack-cli/bin/cli.js')
	args = [
		'--color',
		'--watch'
	]
}
